How did viewing a diff between two versions of a file help you see the bug that was introduced?

In this way you could compare both files and change the differences between each file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Because you could learn easily from your errors.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

The pros of commiting is that is saved in logical changes or small projects.

The cons are that if you create a big commit, you could lose the work if you have a trouble, there is a learning curve to use the commits. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because GIT is oriented to projects more than unique files.

How can you use the commands git log and git diff to view the history of files?

First git log gives us the list of commits saved of the project (history) and second git diff remarks the differences between the commits selected. 

How might using version control make you more confident to make changes that could break something?

Version control could help to restore already broke code or could help me to identify in wich commit I've done a mistake.

Now that you have your workspace set up, what do you want to try using Git for?

I will use it to organize my scripts and the programs/projects that I am developing.
